{"version":3,"sources":["actions/index.js","components/Recipecard.js","components/RecipeList.js","components/Searchbar.js","components/App.js","reducers/root-reducer.js","components/FavouriteRecipe.js","components/RecipeDetails.js","index.js"],"names":["SET_RECIPE","FAV_RECIPE","UNFAV_RECIPE","RecipeCard","state","isFav","recipe","this","props","favRecipe","unFavRecipe","favFlag","Object","keys","starrerecipe","map","fav","label","flag","className","favouriteButton","onClick","unfavourite","favourite","to","ingredientLines","style","float","src","image","alt","cuisineType","Component","connect","console","log","type","RecipeList","length","recipereducer","index","key","Searchbar","ingredients","dish","url","fetch","method","then","res","json","data","setrecipes","hits","Form","inline","FormGroup","FormLabel","FormControl","placeholder","onChange","e","setState","target","value","Button","search","items","App","rootReducer","combineReducers","action","filter","FavouriteRecipe","Recipecard","alldata","currentItem","name","useParams","sharLink","shareAs","Card","Header","Body","Title","Text","Link","href","Footer","store","createStore","composeWithDevTools","applyMiddleware","logger","ReactDOM","render","exact","path","component","RecipeDetail","document","getElementById"],"mappings":"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","file":"static/js/main.37275cb1.chunk.js","sourcesContent":["export const SET_RECIPE = 'SET_RECIPE';\nexport const FAV_RECIPE = 'FAV_RECIPE';\nexport const UNFAV_RECIPE = 'UNFAV_RECIPE';\n\nexport default function setrecipes(items){\n    return{\n    type:'SET_RECIPE',\n    items\n    }\n}\nexport  function favRecipe(recipe){\n    console.log(recipe)\n    return{\n        type:'FAV_RECIPE',\n        recipe\n\n    }\n}\nexport  function unFavRecipe(recipe){\n    // console.log(recipe)\n    return{\n        type:'UNFAV_RECIPE',\n        recipe\n\n    }\n}","import React, { Component } from 'react';\nimport '../style/index.css';\nimport { connect } from 'react-redux';\nimport { favRecipe,unFavRecipe } from '../actions';\nimport { Link } from 'react-router-dom'\n\nclass RecipeCard extends Component{\n    constructor(){\n        super()\n        this.state = {\n            isFav:false\n        }\n    }\n    // componentDidMount(){\n    //     let recipe = this.props.recipe;\n    //     //console.log(\"hiiiiiiiiiiiiiii component mounting\")\n        \n    // }\n\n    favourite(recipe) {\n        let flag = true\n        recipe['flag'] = flag\n        this.props.favRecipe(recipe);\n    }\n    \n    unfavourite(recipe) {\n        this.props.unFavRecipe(recipe);\n    }\n    render(){\n        let favFlag = false\n        let recipe = this.props.recipe;\n        Object.keys(this.props.starrerecipe).map((fav)=>{\n            if(this.props.starrerecipe[fav].recipe.label === recipe.recipe.label){\n                favFlag = this.props.starrerecipe[fav].flag\n            }\n        })\n\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-sm-8 col-md-6\">\n                        {\n                            <div className=\"card\">\n                                {\n                                    this.props.favouriteButton\n                                    ?\n                                    favFlag \n                                        ? <div className='star'\n                                        onClick={()=>this.unfavourite(recipe)}\n                                        >&#9733;</div>\n                                        : <div className='star' \n                                        onClick={()=>this.favourite(recipe)}>&#9734;\n                                        </div>\n                                    :<div className=\"star\"></div> \n                                }\n                                \n                                <div>\n                                    {/* <a href={recipe.href} target=\"blank\" className=\"btn btn-light btn-sm\">  */}\n                                        \n                                        <Link to ={`/favourites/${recipe.recipe.label}`} className=\"btn btn-light btn-sm\">{recipe.recipe.label}</Link>\n                                    {/* </a> */}\n                                </div>\n                                <div className=\"card-body\">\n                                    <p className=\"card-text\" >\n                                    {recipe.recipe.ingredientLines}\n                                    </p>\n                                    <img style={{float:'left'}}\n                                    src={recipe.recipe.image} \n                                    alt={recipe.recipe.label}\n                                    className=\"card-img\"/>\n                                    {recipe.recipe.cuisineType?<p className=\"card-text\"><span className=\"btn btn-light btn-sm\">CuisineType:</span>{recipe.recipe.cuisineType}</p>:''}\n                                    \n                                </div>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nfunction mapStateToProps(state){\n    return {\n        starrerecipe:state.starrerecipe\n    }\n  }\n\nexport default connect(mapStateToProps,{favRecipe,unFavRecipe})(RecipeCard);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport RecipeCard from './Recipecard'\nimport '../style/index.css'\n\nclass RecipeList extends Component{\n    render(){\n        // console.log('this.props',this.props)\n        return (\n            <div>{\n                this.props.starrerecipe.length>0\n                ? <h4 className='link'><Link to ='/favourites'>favourites</Link></h4>\n                : <div></div>   \n            }         \n                {\n                    this.props.recipereducer.map((recipe,index)=>{\n                        return(\n                        <RecipeCard \n                        key ={index} \n                        recipe={recipe}\n                        favouriteButton={true}/>\n                        )\n                    })\n                }\n            </div>\n        )}\n        \n    }\n\nfunction mapStateToProps(state){\n  return state;\n}\nexport default connect(mapStateToProps,null)(RecipeList);","import React,{ Component } from 'react'\nimport {Form, FormControl,FormGroup,FormLabel,Button} from 'react-bootstrap'\nimport {connect} from 'react-redux'\nimport setrecipes from '../actions'\nclass Searchbar extends Component{\n    constructor(){\n        super()\n\n        this.state = {\n            ingredients:'',\n            dish:''\n        } \n\n    }\n    search(){\n        const {ingredients,dish} = this.state;\n        const url = `https://api.edamam.com/search?app_id=900da95e&app_key=40698503668e0bb3897581f4766d77f9&q=${ingredients},${dish}`;\n        fetch(url,{\n            method:'GET'\n        })\n        .then(res=>res.json())\n        .then(data=> data)\n        .then(json=>{\n            // console.log(json)\n             this.props.setrecipes(json.hits)\n        })\n        \n    }\n    render(){\n        // Use FormLable in place off ControlLabel \n        return(\n            <Form inline>\n                <FormGroup>\n                    <FormLabel><b>Ingredients</b></FormLabel>\n                    {''}\n                    <FormControl \n                    type=\"text\" \n                    placeholder='garlic,chicken'\n                    onChange={(e)=> this.setState({ingredients:e.target.value})} />  \n                </FormGroup>\n                {''}\n                <FormGroup>\n                    <FormLabel><b>Dish</b></FormLabel>\n                    {''}\n                    <FormControl \n                    type=\"text\" \n                    placeholder='butter chicken'\n                    onChange={(e)=> this.setState({dish:e.target.value})}\n                    />\n                </FormGroup>\n                {''}\n                <Button onClick={()=> this.search()}>Submit</Button>\n            </Form>\n        )\n    }\n}\n\n\nexport default connect(null,{setrecipes})(Searchbar);","import React , { Component } from 'react'\nimport RecipeList from './RecipeList'\nimport Searchbar from './Searchbar'\nimport '../style/index.css'\n// import FavouriteRecipe from './FavouriteRecipe'\n\nclass App extends Component{\n    render(){\n        return(\n            <div>\n                <h2> Welcome to food finder!\n                </h2>\n                <div className=\"App\">\n                    <Searchbar/>\n                    <RecipeList/>\n                   \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App;","import  { combineReducers } from 'redux'\nimport { SET_RECIPE,FAV_RECIPE ,UNFAV_RECIPE} from '../actions'\n\n\nfunction recipereducer(state=[],action){\n    switch(action.type){\n        case SET_RECIPE:\n            return action.items;\n        default:\n            return state;\n    }\n}\n\nfunction starrerecipe(state=[],action){\n    switch(action.type){\n        case FAV_RECIPE:\n            state = [...state,action.recipe];\n            return state;\n        case UNFAV_RECIPE:\n            // console.log(action)\n        state = state.filter((data)=>{\n          return data.recipe.label!==action.recipe.recipe.label\n        });\n        return state\n        default:\n            return state;\n    }\n}\nconst rootReducer = combineReducers({recipereducer,starrerecipe});\nexport default rootReducer;\n","import React,{ Component }from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport Recipecard from './Recipecard';\nimport '../style/index.css'\nclass FavouriteRecipe extends Component{\n\n    render(){\n        //let fav = this.props.starrerecipe;\n        console.log(this.props);\n        return(\n            \n            <div >\n                <h4 className='link'><Link to ='/'>Home</Link></h4>\n                <h4 className=\"App1\">Favourite Recipe List:</h4>\n                    {\n                        this.props.favourite.map((fav,index)=>{\n                            return(\n                                <Recipecard \n                                key={index} \n                                recipe={fav}\n                                favouriteButton ={false}/>\n                            )\n                        })\n                    }    \n            </div>            \n        )\n    }\n}\n\nfunction mapsStateToProps(state){\n    return {\n        favourite:state.starrerecipe,\n        alldata:state\n    }\n}\nexport default connect(mapsStateToProps,null)(FavouriteRecipe);","import React from 'react'\nimport { useParams } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport Card from 'react-bootstrap/Card'\n// import Button from 'react-bootstrap/Button'\nimport { connect } from 'react-redux';\n\n\nconst RecipeDetail =(props)=>{\n    \n        const {name} = useParams()\n// console.log(props)\nlet currentItem\n        Object.keys(props.recipereducer).map((key)=>{\n        // console.log(props.recipereducer[key])\n                if(props.recipereducer[key].recipe.label === name){\n                        \n                        currentItem = props.recipereducer[key]\n                }\n                return null\n        })\n        console.log(currentItem)\n        let sharLink = currentItem?currentItem.recipe?currentItem.recipe.shareAs:'#':'#'\n        return(\n            <>\n            <h4 className='link'><Link to ='/'>home</Link></h4>\n            <div>Welcome to recipe detail page</div>\n            \n            <Card className=\"text-center\">\n                <Card.Header>Recipe Details</Card.Header>\n                <Card.Body>\n                <Card.Title><p>{name}</p></Card.Title>\n                <Card.Text>\n                For more detail on the recipe please follow :\n                </Card.Text>\n                <Card.Link href={sharLink} target='_blank'>This Link</Card.Link>\n                </Card.Body>\n                <Card.Footer className=\"text-muted\">2 days ago</Card.Footer>\n                </Card>\n            </>\n        )\n    \n}\n\nfunction mapStateToProps(state){\n        return state;\n}\n\n\nexport default connect(mapStateToProps,null)(RecipeDetail);\n","// eslint-disable-next-line\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n// eslint-disable-next-line\nimport {BrowserRouter, Route ,Switch ,Redirect }from 'react-router-dom'\nimport App from './components/App'\nimport {createStore,applyMiddleware} from 'redux'\nimport rootReducer from './reducers/root-reducer'\nimport { Provider }from 'react-redux'\nimport FavouriteRecipe from './components/FavouriteRecipe'\nimport RecipeDetail from './components/RecipeDetails'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport logger from 'redux-logger'\nvar store = createStore(rootReducer,composeWithDevTools(applyMiddleware(logger)));\n//store.subscribe(()=> console.log(store.getState()));\n\nReactDOM.render((\n    <Provider store ={store}>\n    <BrowserRouter>\n    <Switch>\n        <Route exact path='/' component={App}/>\n        <Route path='/favourites' exact component={FavouriteRecipe}/>\n        <Route path='/favourites/:name' component={RecipeDetail} />\n    </Switch>\n    </BrowserRouter>\n    </Provider>)\n    ,document.getElementById('root'))"],"sourceRoot":""}