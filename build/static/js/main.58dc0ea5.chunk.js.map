{"version":3,"sources":["actions/index.js","components/Recipecard.js","components/RecipeList.js","components/Searchbar.js","components/FavouriteRecipe.js","components/App.js","reducers/root-reducer.js","index.js"],"names":["SET_RECIPE","FAV_RECIPE","RecipeCard","state","isFav","recipe","this","props","favRecipe","setState","className","favouriteButton","onClick","favourite","href","target","title","ingredients","src","thumbnail","alt","Component","connect","type","RecipeList","starrerecipe","length","to","recipereducer","map","index","key","Searchbar","dish","url","fetch","method","then","res","json","data","setrecipes","results","Form","inline","FormGroup","FormLabel","FormControl","placeholder","onChange","e","value","Button","search","items","FavouriteRecipe","console","log","fav","Recipecard","App","rootReducer","combineReducers","action","store","createStore","subscribe","getState","ReactDOM","render","exact","path","component","document","getElementById"],"mappings":"6QAAaA,G,MAAa,cACbC,EAAa,a,ICKpBC,E,YACF,aAAc,IAAD,8BACT,+CACKC,MAAQ,CACTC,OAAM,GAHD,E,uEAOHC,GACNC,KAAKC,MAAMC,UAAUH,GACrBC,KAAKG,SAAS,CAACL,OAAM,M,+BAGhB,IAAD,OAEAC,EAASC,KAAKC,MAAMF,OAExB,OACI,yBAAKK,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,4BAEP,yBAAKA,UAAU,QAEPJ,KAAKC,MAAMI,gBAEPL,KAAKH,MAAMC,MACT,yBAAKM,UAAU,QAAf,UACA,yBAAKA,UAAU,OACjBE,QAAS,kBAAI,EAAKC,UAAUR,KAD1B,UAGL,yBAAKK,UAAU,SAGpB,6BACI,uBAAGI,KAAMT,EAAOS,KAAMC,OAAO,QAAQL,UAAU,wBAC1CL,EAAOW,QAGhB,yBAAKN,UAAU,aACX,uBAAGA,UAAU,aACZL,EAAOY,aAER,yBACAC,IAAKb,EAAOc,UACZC,IAAKf,EAAOW,MACZN,UAAU,sB,GA9CrBW,aAyDVC,cAAQ,KAAK,CAACd,UDtDrB,SAAmBH,GACvB,MAAM,CACFkB,KAAK,aACLlB,YCmDOiB,CAA0BpB,GCzDnCsB,E,iLAGE,OACI,6BACIlB,KAAKC,MAAMkB,aAAaC,OAAO,EAC7B,wBAAIhB,UAAU,QAAO,kBAAC,IAAD,CAAMiB,GAAI,eAAV,eACrB,8BAGErB,KAAKC,MAAMqB,cAAcC,KAAI,SAACxB,EAAOyB,GACjC,OACA,kBAAC,EAAD,CACAC,IAAMD,EACNzB,OAAQA,EACRM,iBAAiB,Y,GAfhBU,aA6BVC,mBAHf,SAAyBnB,GACvB,OAAOA,IAE8B,KAAxBmB,CAA8BE,G,wCC/BvCQ,E,YACF,aAAc,IAAD,8BACT,+CAEK7B,MAAQ,CACTc,YAAY,GACZgB,KAAK,IALA,E,sEASJ,IAAD,SACuB3B,KAAKH,MAAzBc,EADH,EACGA,YAAYgB,EADf,EACeA,KACbC,EAAG,4CAAwCjB,EAAxC,cAAyDgB,GAClEE,MAAMD,EAAI,CACNE,OAAO,QAEVC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GAAI,OAAGA,KACZH,MAAK,SAAAE,GACD,EAAKhC,MAAMkC,WAAWF,EAAKG,c,+BAI3B,IAAD,OAEJ,OACI,kBAACC,EAAA,EAAD,CAAMC,QAAM,GACR,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAW,2CACV,GACD,kBAACC,EAAA,EAAD,CACAxB,KAAK,OACLyB,YAAY,iBACZC,SAAU,SAACC,GAAD,OAAM,EAAKzC,SAAS,CAACQ,YAAYiC,EAAEnC,OAAOoC,YAEvD,GACD,kBAACN,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAW,oCACV,GACD,kBAACC,EAAA,EAAD,CACAxB,KAAK,OACLyB,YAAY,iBACZC,SAAU,SAACC,GAAD,OAAM,EAAKzC,SAAS,CAACwB,KAAKiB,EAAEnC,OAAOoC,YAGhD,GACD,kBAACC,EAAA,EAAD,CAAQxC,QAAS,kBAAK,EAAKyC,WAA3B,e,GA9CQhC,aAqDTC,cAAQ,KAAK,CAACmB,WHtDd,SAAoBa,GAC/B,MAAM,CACN/B,KAAK,aACL+B,WGmDWhC,CAA2BU,GCpDpCuB,E,iLAKE,OADAC,QAAQC,IAAInD,KAAKC,OAGb,6BACI,wBAAIG,UAAU,QAAO,kBAAC,IAAD,CAAMiB,GAAI,KAAV,SACrB,wBAAIjB,UAAU,QAAd,0BAEQJ,KAAKC,MAAMM,UAAUgB,KAAI,SAAC6B,EAAI5B,GAC1B,OACI,kBAAC6B,EAAD,CACA5B,IAAKD,EACLzB,OAAQqD,EACR/C,iBAAkB,Y,GAhBpBU,aA8BfC,mBALf,SAA0BnB,GACtB,MAAO,CACHU,UAAUV,EAAMsB,gBAGgB,KAAzBH,CAA+BiC,GCb/BK,E,iLAdP,OACI,6BACI,wDAEA,yBAAKlD,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GARFW,a,gBCgBlB,IACewC,EADKC,YAAgB,CAAClC,cAlBrC,WAAwC,IAAjBzB,EAAgB,uDAAV,GAAG4D,EAAO,uCACnC,OAAOA,EAAOxC,MACV,KAAKvB,EACD,OAAO+D,EAAOT,MAClB,QACI,OAAOnD,IAagCsB,aATnD,WAAuC,IAAjBtB,EAAgB,uDAAV,GAAG4D,EAAO,uCAClC,OAAOA,EAAOxC,MACV,KAAKtB,EAED,OADAE,EAAK,sBAAOA,GAAP,CAAa4D,EAAO1D,SAE7B,QACI,OAAOF,MCVf6D,EAAQC,YAAYJ,GACxBG,EAAME,WAAU,kBAAKV,QAAQC,IAAIO,EAAMG,eAEvCC,IAASC,OACL,kBAAC,IAAD,CAAUL,MAAQA,GAClB,kBAAC,IAAD,KACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,IAAIC,UAAWZ,IACjC,kBAAC,IAAD,CAAOW,KAAK,cAAcC,UAAWjB,OAIxCkB,SAASC,eAAe,W","file":"static/js/main.58dc0ea5.chunk.js","sourcesContent":["export const SET_RECIPE = 'SET_RECIPE';\nexport const FAV_RECIPE = 'FAV_RECIPE';\n\nexport default function setrecipes(items){\n    return{\n    type:'SET_RECIPE',\n    items\n    }\n}\nexport  function favRecipe(recipe){\n    return{\n        type:'FAV_RECIPE',\n        recipe\n\n    }\n}","import React, { Component } from 'react';\nimport '../style/index.css';\nimport { connect } from 'react-redux';\nimport { favRecipe } from '../actions';\n\n\nclass RecipeCard extends Component{\n    constructor(){\n        super()\n        this.state = {\n            isFav:false\n        }\n    }\n\n    favourite(recipe) {\n        this.props.favRecipe(recipe);\n        this.setState({isFav:true})\n        \n    }\n    render(){\n        \n        let recipe = this.props.recipe;\n        \n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-sm-8 col-md-6\">\n                        {\n                            <div className=\"card\">\n                                {\n                                    this.props.favouriteButton\n                                    ?\n                                        this.state.isFav \n                                        ? <div className='star'>&#9733;</div>\n                                        : <div className='star' \n                                        onClick={()=>this.favourite(recipe)}>&#9734;\n                                        </div>\n                                    :<div className=\"star\"></div> \n                                }\n                                \n                                <div>\n                                    <a href={recipe.href} target=\"blank\" className=\"btn btn-light btn-sm\"> \n                                        {recipe.title}\n                                    </a>\n                                </div>\n                                <div className=\"card-body\">\n                                    <p className=\"card-text\">\n                                    {recipe.ingredients}\n                                    </p>\n                                    <img \n                                    src={recipe.thumbnail} \n                                    alt={recipe.title}\n                                    className=\"card-img\"/>\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(null,{favRecipe})(RecipeCard);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport RecipeCard from './Recipecard'\nimport '../style/index.css'\n\nclass RecipeList extends Component{\n    render(){\n        //console.log('this.props',this.props.starrerecipe)\n        return (\n            <div>{\n                this.props.starrerecipe.length>0\n                ? <h4 className='link'><Link to ='/favourites'>favourites</Link></h4>\n                : <div></div>   \n            }         \n                {\n                    this.props.recipereducer.map((recipe,index)=>{\n                        return(\n                        <RecipeCard \n                        key ={index} \n                        recipe={recipe}\n                        favouriteButton={true}/>\n                        )\n                    })\n                }\n            </div>\n        )}\n        \n    }\n\n\n\nfunction mapStateToProps(state){\n  return state;\n}\nexport default connect(mapStateToProps,null)(RecipeList);","import React,{ Component } from 'react'\nimport {Form, FormControl,FormGroup,FormLabel,Button} from 'react-bootstrap'\nimport {connect} from 'react-redux'\nimport setrecipes from '../actions'\nclass Searchbar extends Component{\n    constructor(){\n        super()\n\n        this.state = {\n            ingredients:'',\n            dish:''\n        } \n\n    }\n    search(){\n        const {ingredients,dish} = this.state;\n        const url = `http://www.recipepuppy.com/api/?i=${ingredients}&q=${dish}`;\n        fetch(url,{\n            method:'GET'\n        })\n        .then(res=>res.json())\n        .then(data=> data)\n        .then(json=>{\n             this.props.setrecipes(json.results)\n        })\n        \n    }\n    render(){\n        // Use FormLable in place off ControlLabel \n        return(\n            <Form inline>\n                <FormGroup>\n                    <FormLabel><b>Ingredients</b></FormLabel>\n                    {''}\n                    <FormControl \n                    type=\"text\" \n                    placeholder='garlic,chicken'\n                    onChange={(e)=> this.setState({ingredients:e.target.value})} />  \n                </FormGroup>\n                {''}\n                <FormGroup>\n                    <FormLabel><b>Dish</b></FormLabel>\n                    {''}\n                    <FormControl \n                    type=\"text\" \n                    placeholder='butter chicken'\n                    onChange={(e)=> this.setState({dish:e.target.value})}\n                    />\n                </FormGroup>\n                {''}\n                <Button onClick={()=> this.search()}>Submit</Button>\n            </Form>\n        )\n    }\n}\n\n\nexport default connect(null,{setrecipes})(Searchbar);","import React,{ Component }from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport Recipecard from './Recipecard';\nimport '../style/index.css'\nclass FavouriteRecipe extends Component{\n\n    render(){\n        //let fav = this.props.starrerecipe;\n        console.log(this.props);\n        return(\n            \n            <div >\n                <h4 className='link'><Link to ='/'>Home</Link></h4>\n                <h4 className=\"App1\">Favourite Recipe List:</h4>\n                    {\n                        this.props.favourite.map((fav,index)=>{\n                            return(\n                                <Recipecard \n                                key={index} \n                                recipe={fav}\n                                favouriteButton ={false}/>\n                            )\n                        })\n                    }    \n            </div>            \n        )\n    }\n}\n\nfunction mapsStateToProps(state){\n    return {\n        favourite:state.starrerecipe\n    }\n}\nexport default connect(mapsStateToProps,null)(FavouriteRecipe);","import React , { Component } from 'react'\nimport RecipeList from './RecipeList'\nimport Searchbar from './Searchbar'\nimport '../style/index.css'\nimport FavouriteRecipe from './FavouriteRecipe'\n\nclass App extends Component{\n    render(){\n        return(\n            <div>\n                <h2> Welcome to food finder!\n                </h2>\n                <div className=\"App\">\n                    <Searchbar/>\n                    <RecipeList/>\n                   \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App;","import  { combineReducers } from 'redux'\nimport { SET_RECIPE,FAV_RECIPE } from '../actions'\n\n\nfunction recipereducer(state=[],action){\n    switch(action.type){\n        case SET_RECIPE:\n            return action.items;\n        default:\n            return state;\n    }\n}\n\nfunction starrerecipe(state=[],action){\n    switch(action.type){\n        case FAV_RECIPE:\n            state = [...state,action.recipe];\n            return state;\n        default:\n            return state;\n    }\n}\nconst rootReducer = combineReducers({recipereducer,starrerecipe});\nexport default rootReducer;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter, Route ,Switch ,Redirect }from 'react-router-dom'\nimport App from './components/App'\nimport {createStore} from 'redux'\nimport rootReducer from './reducers/root-reducer'\nimport { Provider }from 'react-redux'\nimport FavouriteRecipe from './components/FavouriteRecipe'\n\nvar store = createStore(rootReducer);\nstore.subscribe(()=> console.log(store.getState()));\n\nReactDOM.render((\n    <Provider store ={store}>\n    <BrowserRouter>\n    <Switch>\n        <Route exact path='/' component={App}/>\n        <Route path='/favourites' component={FavouriteRecipe}/>\n    </Switch>\n    </BrowserRouter>\n    </Provider>)\n    ,document.getElementById('root'))"],"sourceRoot":""}